# .env.example - Copy this file to .env and fill in your actual values.
# Refer to README.md for detailed setup instructions.

# Bot operational mode: 'polling' (for local development) or 'webhook' (for production)
BOT_MODE=polling

# Your Telegram Bot API Token
# For local testing, use a separate token from your production bot.
BOT_API_KEY=YOUR_TELEGRAM_BOT_TOKEN_HERE

# Supabase project URL
SUPABASE_URL=YOUR_SUPABASE_URL_HERE

# Supabase service_role key (provides admin access, keep it secret)
SUPABASE_KEY=YOUR_SUPABASE_SERVICE_ROLE_KEY_HERE

# Optional: Default Google Gemini API Key for the bot if users don't provide their own.
# If not set, users MUST provide their own key via /set_api_key.
GOOGLE_API_KEY=YOUR_GEMINI_API_KEY_HERE (Optional)

# --- Model Configuration ---
# Default model name to use for conversations.
# Example: models/gemini-1.5-flash-latest, models/gemini-1.5-pro-latest
DEFAULT_MODEL_NAME=models/gemini-1.5-flash-latest

# Maximum number of conversation turns (user + model messages) to keep in history.
# Affects context window and token usage. Set to 0 for unlimited (not recommended).
MAX_HISTORY_LENGTH_TURNS=20

# --- Usage Limits (if applicable) ---
# Limit the number of messages a user can send using the default API key.
# Set to 0 for no limit (if GEMINI_BOT_DEFAULT_API_KEY is set).
DEFAULT_KEY_MESSAGE_LIMIT=10

# --- Miscellaneous ---
# Telegram File ID for the "loading" animation shown while waiting for AI response.
# To get this ID, simply send your desired GIF animation to this bot in a private chat.
# The bot will reply with the File ID and instructions.
# Example 'BAACAgQAAxkBAAIHpGgQtb7K66BEXtOAo4v3R9TBH1XRAALWGwACJbhpUF_ZfF4mEh3HNgQ'
LOADING_ANIMATION_FILE_ID=YOUR_LOADING_ANIMATION_FILE_ID
# You can get this from here https://home.openweathermap.org/api_keys
OPEN_WEATHER_API_KEY=YOUR_OPEN_WEATHER_API_KEY
